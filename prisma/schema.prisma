generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  username    String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
  avatarUrl   String?
  firstName   String?
  lastName    String?
  authMethods AuthMethod[]
}

model AuthMethod {
  id             String         @id @default(cuid())
  userId         String
  type           AuthMethodType
  identifier     String
  credential     String?
  refreshToken   String?
  isVerified     Boolean        @default(false)
  lastUsedAt     DateTime?
  failedAttempts Int            @default(0)
  lockedUntil    DateTime?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now()) @updatedAt
  user           User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  tokens         Token[]

  @@unique([userId, type, identifier])
}

model Token {
  id           String     @id @default(cuid())
  token        String     @unique
  createdAt    DateTime   @default(now())
  expiresAt    DateTime
  revoked      Boolean    @default(false)
  authMethodId String
  authMethod   AuthMethod @relation(fields: [authMethodId], references: [id], onDelete: Cascade)
}

model Sign {
  id         String   @id @default(cuid())
  word       String
  definition String?
  mediaUrl   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

enum AuthMethodType {
  LOCAL
  GOOGLE
}
